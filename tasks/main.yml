---
# Boilerplate tasks

- name: "Include version-specific variables for OS."
  include_vars: "{{ specific_variables }}"
  with_first_found:
    - files:
        - "vars/{{ ansible_distribution | lower }}{{ ansible_distribution_version }}.yml"
        - "vars/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}.yml"
        - "vars/{{ ansible_distribution | lower }}.yml"
        - "vars/{{ ansible_os_family | lower }}.yml"
      skip: true
  loop_control:
    loop_var: specific_variables

- name: "Include OS specific tasks"
  include_tasks: "{{ specific_tasks }}"
  with_first_found:
    - files:
        - "tasks/{{ ansible_distribution | lower }}{{ ansible_distribution_version }}.yml"
        - "tasks/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}.yml"
        - "tasks/{{ ansible_distribution | lower }}.yml"
        - "tasks/{{ ansible_os_family | lower }}.yml"
      skip: true
  loop_control:
    loop_var: specific_tasks

- name: "Create available sites directory if it does not exist"
  tags: ["apache2"]
  file:
    path: /etc/apache2/sites-available
    state: directory
    mode: u=rwx,g=rx,o=rx

- name: "Create enabled sites directory if it does not exist"
  file:
    path: /etc/apache2/sites-enabled
    state: directory
    mode: u=rwx,g=rx,o=rx

- name: "Install dependencies"
  package:
    name:
      - "{{ package }}"
    state: present
  with_items: "{{ ansible_role_apache2_packages }}"
  loop_control:
    loop_var: package

- name: "Install Apache2 module 'wsgi'"
  tags: [ "apache2", "mod" ]
  package:
    state: present
    name: libapache2-mod-wsgi-py3

- name: "Enable/disable Apache2 module 'wsgi'"
  tags: [ "apache2", "mod" ]
  apache2_module:
    state: present
    name: wsgi


# Role tasks